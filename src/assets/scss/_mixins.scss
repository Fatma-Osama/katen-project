@mixin ltr() {
  html[dir=ltr] & {
    @content;
  }
}
@mixin rtl() {
  html[dir=rtl] & {
    @content;
  }
}

// Define vertical, horizontal, or both position
@mixin center($position) {
  position: absolute;

  @if $position == 'v' {
    top: 50%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
  }
  @else if $position == 'h' {
    left: 50%;
    -webkit-transform: translateX(-50%);
    -ms-transform: translateX(-50%);
    transform: translate(-50%);
  }
  @else if $position == 'both' {
    top: 50%;
    left: 50%;
    -webkit-transform: translate(-50%, -50%);
    -ms-transform: translate(-50%, -50%);
    transform: translate(-50%, -50%);
  }
}

// responsive mixin
$breakpoints: (
  // Extra small screen / phone
        xs: 430px,
  // Small screen / phone
        sm: 576px,
  // Medium screen / tablet
        md: 768px,
  // Large screen / desktop
        lg: 992px,
  // Extra large screen / wide desktop
        xl: 1200px,

        xxl: 1400px,
        xxxl: 1680px,
);
// Respond above.
@mixin respond-above($breakpoint) {

  // If the breakpoint exists in the map.
  @if map-has-key($breakpoints, $breakpoint) {

    // Get the breakpoint value.
    $breakpoint-value: map-get($breakpoints, $breakpoint);

    // Write the media query.
    @media (min-width: $breakpoint-value) {
      @content;
    }

    // If the breakpoint doesn't exist in the map.
  } @else {

    // Log a warning.
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}
// respond below
@mixin respond-below($breakpoint) {

  // If the breakpoint exists in the map.
  @if map-has-key($breakpoints, $breakpoint) {

    // Get the breakpoint value.
    $breakpoint-value: map-get($breakpoints, $breakpoint);

    // Write the media query.
    @media (max-width: ($breakpoint-value - .1)) {
      @content;
    }

    // If the breakpoint doesn't exist in the map.
  } @else {

    // Log a warning.
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
} 
// respond between
@mixin respond-between($lower, $upper) {

  // If both the lower and upper breakpoints exist in the map.
  @if map-has-key($breakpoints, $lower) and map-has-key($breakpoints, $upper) {

    // Get the lower and upper breakpoints.
    $lower-breakpoint: map-get($breakpoints, $lower);
    $upper-breakpoint: map-get($breakpoints, $upper);

    // Write the media query.
    @media (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - .1)) {
      @content;
    }

    // If one or both of the breakpoints don't exist.
  } @else {

    // If lower breakpoint is invalid.
    @if (map-has-key($breakpoints, $lower) == false) {

      // Log a warning.
      @warn 'Your lower breakpoint was invalid: #{$lower}.';
    }

    // If upper breakpoint is invalid.
    @if (map-has-key($breakpoints, $upper) == false) {

      // Log a warning.
      @warn 'Your upper breakpoint was invalid: #{$upper}.';
    }
  }
}
// responsive mixin
@mixin btn{
  &::after{
      content:"";
      background: linear-gradient(to left, rgb(254, 79, 112) 0%, rgb(255, 163, 135) 100%);
     // background-size: 100% 100%;
      position: absolute;
      right: -100%;
      bottom: 0px;
      width: 0%;
      height: 100%;
      transition: all ease-in-out 0.8s;
      z-index: 2;
      border-radius: 25px;
      overflow: hidden;
  }
  background: var(--back-ground);
  padding: 0  0.75rem ;
  color: #fff;
  border-radius: 25px;
  text-transform: capitalize;
  position: relative;
 // align-items: center;
  display: inline-block;
}
@mixin poin{
  background-color: var(--main-color);
  border-radius: 50%;
  position: absolute;
  top: 50%;
  right: -20px;
}
@mixin heading{
  position: relative;
  padding: 35px 30px;
  margin-bottom: 40px;
  border: 1px solid var(--border-color);
  border-radius: 10px;
}